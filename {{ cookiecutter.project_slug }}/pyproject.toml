[project]
name = "{{ cookiecutter.project_slug }}"
{%- if cookiecutter.packaging == "poetry" %}
version = "0.1.0"
{%- else %}
dynamic = ["version"]
{%- endif %}
description = "{{ cookiecutter.project_description }}"
authors = [
    {name = "{{ cookiecutter.author }}", email = "{{ cookiecutter.author_email }}"}
{%- if cookiecutter.rse_team_as_coauthor %},
    {name = "Imperial College London RSE Team", email = "ict-rse-team@imperial.ac.uk"},
{%- endif %}
]
{%- if cookiecutter.packaging == "pip-tools" %}
{%- if cookiecutter.use_bsd3_license %}
license = "BSD-3-Clause"
license-files = ["LICENSE"]
{%- endif %}
requires-python = ">=3.13"
dependencies = []

[project.optional-dependencies]
dev = ["ruff", "mypy", "pip-tools", "pre-commit", "pytest", "pytest-cov", "pytest-mock"]
{% if cookiecutter.mkdocs -%}
doc = [
    "mkdocs",
    "mkdocstrings",
    "mkdocstrings-python",
    "mkdocs-material",
    "mkdocs-gen-files",
    "mkdocs-literate-nav",
    "mkdocs-section-index",
]
{%- endif %}
{%- endif %}
{%- if cookiecutter.packaging == "poetry" %}
{%- if cookiecutter.use_bsd3_license %}
license = {text = "BSD-3-Clause"}
{%- endif %}

[tool.poetry.dependencies]
python = "^3.13"

[tool.poetry.group.dev.dependencies]
mypy = "VERSION"
pytest = "VERSION"
pytest-cov = "VERSION"
pytest-mock = "VERSION"
pre-commit = "VERSION"
ruff = "VERSION"
{% if cookiecutter.mkdocs %}
[tool.poetry.group.docs.dependencies]
mkdocs = "VERSION"
mkdocstrings = "VERSION"
mkdocstrings-python = "VERSION"
mkdocs-material = "VERSION"
mkdocs-gen-files = "VERSION"
mkdocs-literate-nav = "VERSION"
mkdocs-section-index = "VERSION"
{%- endif -%}
{%- endif %}

[tool.mypy]
disallow_any_explicit = true
disallow_any_generics = true
warn_unreachable = true
warn_unused_ignores = true
disallow_untyped_defs = true
exclude = [".venv/", "docs/"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
addopts = "-v -p no:warnings --cov={{ cookiecutter.project_slug }} --cov-branch --cov-report=html --cov-report=xml --doctest-modules --ignore={{ cookiecutter.project_slug }}/__main__.py --ignore=docs/"

[tool.ruff]
target-version = "py313"

[tool.ruff.lint]
select = [
    "D",   # pydocstyle
    "E",   # pycodestyle
    "F",   # Pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "RUF", # ruff
]
pydocstyle.convention = "google"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package
]

{% if cookiecutter.packaging == "pip-tools" -%}
[build-system]
requires = ["setuptools>=78", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = ["{{ cookiecutter.project_slug }}"]

[tool.setuptools_scm]
{%- elif cookiecutter.packaging == "poetry" -%}
[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
{%- endif %}
