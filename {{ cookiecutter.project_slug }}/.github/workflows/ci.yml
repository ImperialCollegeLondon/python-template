name: Test and build

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ "{{" }}matrix.os{{ "}}" }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
{%- if cookiecutter.use_windows_ci_runner %}
          - windows-latest
{%- endif %}
{%- if cookiecutter.use_macos_ci_runner %}
          - macos-latest
{%- endif %}
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ "{{" }}matrix.python-version{{ "}}" }}
          cache: {% if cookiecutter.packaging == "poetry" %}poetry{% else %}pip{% endif %}

{%- if cookiecutter.packaging == "poetry" %}
      - name: Install Poetry
        uses: abatilo/actions-poetry@v3.0.0
        with:
          poetry-version: 1.8.3

      - name: Install dependencies
        run: poetry install

      - name: Run tests
        run: poetry run pytest
{%- if cookiecutter.mkdocs %}

      - name: Check that documentation builds cleanly with MkDocs
        if: matrix.os == 'ubuntu-latest'
        run: poetry run mkdocs build --strict
{%- endif %}
{%- elif cookiecutter.packaging == "pip-tools" %}
      - name: Install dependencies
        run: pip install -r dev-requirements.txt

      - name: Run tests
        run: pytest
{%- if cookiecutter.mkdocs %}

      - name: Install doc dependencies
        run: pip install -r doc-requirements.txt

      - name: Check that documentation builds cleanly with MkDocs
        if: matrix.os == 'ubuntu-latest'
        run: mkdocs build --strict
{%- endif %}
{%- endif %}
